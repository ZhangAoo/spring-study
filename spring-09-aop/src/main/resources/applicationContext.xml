<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">
<!--    注册bean-->
    <bean id="userService" class="all.service.UserServiceImpl"></bean>
    <bean id="log" class="all.log.Log"></bean>
    <bean id="afterLog" class="all.log.AfterLog"></bean>

<!--    方式三：使用注解实现AOP-->
    <bean id="annotationPointCut" class="all.diy.AnnotationPointCut"/>
<!--    开启注解支持-->
    <aop:aspectj-autoproxy/>






<!--&lt;!&ndash;    方法一：   使用原生Spring API接口&ndash;&gt;-->

<!--&lt;!&ndash;    配置aop:需要导入约束&ndash;&gt;-->
<!--    <aop:config>-->
<!--        &lt;!&ndash;切入点：expression: 表达式,execution(要执行的位置  * * * *  *)&ndash;&gt;-->
<!--    <aop:pointcut id="pointcut" expression="execution(* all.service.UserServiceImpl.*(..))"/>-->
<!--        &lt;!&ndash;执行环绕增加！&ndash;&gt;-->
<!--        <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>-->
<!--        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>-->
<!--</aop:config>-->

<!--    方法二：  自定义类（主要是切面定义）-->

<!--    <bean id="diy" class="all.diy.DiyPointCut"/>-->
<!--<aop:config>-->
<!--&lt;!&ndash;    自定义切面，ref 要引用的类&ndash;&gt;-->
<!--    <aop:aspect ref="diy">-->
<!--&lt;!&ndash;        切入点&ndash;&gt;-->
<!--        <aop:pointcut id="point" expression="execution(* all.service.UserServiceImpl.*(..))"/>-->
<!--&lt;!&ndash;        通知&ndash;&gt;-->
<!--        <aop:before method="before" pointcut-ref="point"/>-->
<!--        <aop:after method="after" pointcut-ref="point"/>-->
<!--    </aop:aspect>-->
<!--</aop:config>-->


</beans>